$aspect-width: 720px;
$aspect-height: 405px;
$btn-width: 20px;
$btn-height: 20px;
$transparent-black: rgba(0, 0, 0, 0.8);
@mixin toggle {
    position: absolute;
    border: 0;
    padding: 0;
    background-color: transparent;
}

body {
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.wrapper {
    height: 900px;
    width: 100%;
    background-color: white;
}

button {
    background-color: transparent;
    padding: 0;
    margin: 0;
    border: 0;
}

button:focus {
    outline: none;
}

.container {
    display: grid;
    grid-template-columns: 10% 10% 10% 10% 10% 10% 10% 10% 10% 10%;
    grid-template-rows: 10% 10% 10% 10% 10% 10% 10% 10% 10% 10%;
    position: absolute;
    width: $aspect-width;
    height: $aspect-height;
    .video-source {
        grid-column: 1/11;
        grid-row: 1/11;
        width: $aspect-width;
        height: $aspect-height;
        background-color: silver;
    }
    .screen {
        position: absolute;
        bottom: 0;
        height: 40px;
        width: 720px;
        background-color: rgba(0, 0, 0, 0);
    }
    .casing {
        grid-column: 1/11;
        grid-row: 9/10;
        align-self: flex-end;
        height: 6px;
        margin-left: 10px;
        width: 700px;
        background-color: black;
        .bar {
            position: absolute;
            left: 4px;
            top: 5px;
            height: 3px;
            width: 694px;
            background-color: grey;
            opacity: 0;
        }
        /* slidershell exists only
        to provide a positioning context for the range input and other elements.*/
        .slidershell {
            border: 0 none;
            position: relative;
            left: 0px;
            top: 0px;
            overflow: visible;
        }
        /* .sliderfill adds color (or a gradient as seen here) to the track as the user 
            drags the thumb. */
        .sliderfill {
            height: 3px;
            border-radius: 4px;
            position: absolute;
            opacity: 1;
            pointer-events: none;
            background: red;
            opacity: 0;
        }
        /* .sliderthumb can be any css you like including an image. 
            The dimensions must match those found in the rule for 
            input[type=range]::-webkit-slider-thumb. */
        .sliderthumb {
            width: 12px;
            height: 12px;
            /* background-image: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/358203/thumb.png'); */
            background-color: red;
            background-size: 40px 40px;
            background-position: 0px 0px;
            background-repeat: no-repeat;
            position: absolute;
            left: 0px;
            top: 0px;
            border: 0 none;
            border-radius: 50%;
            padding: 0px;
            margin: 0px;
            text-align: center;
            pointer-events: none;
            opacity: 0;
        }
        /* The .slider and .slidervertical classes are for the range inputs. 
            Set the z-index high so its on top. */
        .slider,
        .slider-vertical {
            position: absolute;
            left: 0px;
            top: 0px;
            overflow: visible;
            z-index: 100;
        }
        /* First we have to make transparent all the default elements of the range input.
            We use color:transparent to eliminate the default tick marks in IE. */
        input[type=range]::-ms-track {
            width: 100%;
            height: 100%;
            -webkit-appearance: none;
            margin: 0px;
            padding: 0px;
            border: 0 none;
            background: transparent;
            color: transparent;
            overflow: visible;
        }
        input[type=range]::-moz-range-track {
            width: 100%;
            height: 100%;
            -moz-appearance: none;
            margin: 0px;
            padding: 0px;
            border: 0 none;
            background: transparent;
            color: transparent;
            overflow: visible;
        }
        input[type=range] {
            width: 100%;
            height: 100%;
            -webkit-appearance: none;
            margin: 0px;
            padding: 0px;
            border: 0 none;
            background: transparent;
            color: transparent;
            overflow: visible;
        }
        /* we need a separate rule for when the range input is to be vertical */
        input[type=range].slidervertical {
            -webkit-appearance: slider-vertical;
            opacity: 1;
        }
        input[type=range]:focus::-webkit-slider-runnable-track {
            background: transparent;
            border: transparent;
        }
        input[type=range]:focus {
            outline: none;
        }
        input[type=range]::-webkit-slider-thumb {
            width: 20px;
            height: 20px;
            border-radius: 0px;
            border: 0 none;
            background: transparent;
            -webkit-appearance: none;
        }
    }
    .controls-bar {
        grid-column: 1/11;
        grid-row: 10/11;
        position: relative;
        width: 100%;
        height: 60px;
        display: flex;
        align-items: flex-end;
        align-self: flex-end;
        background-color: $transparent-black;
        .controls-triad {
            margin-left: 20px;
            width: 120px;
            height: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            .empty-btn {
                height: $btn-height;
                width: $btn-width;
            }
            .test-play-toggle {
                height: $btn-width;
                width: $btn-width;
                position: absolute;
                bottom: 10px;
                display: flex;
                #pause {
                    height: $btn-height;
                    width: $btn-width;
                }
                .left-block {
                    position: absolute;
                    left: 0;
                    height: $btn-width;
                    width: $btn-height/2;
                    background-color: white;
                }
                .right-block {
                    position: absolute;
                    right: 0;
                    height: $btn-width;
                    width: $btn-height/2;
                    background-color: white;
                }
                .triangle-top {
                    position: absolute;
                    padding: 0;
                    border-top: $btn-height/2 solid black;
                    border-left: $btn-width solid transparent;
                }
                .triangle-bottom {
                    position: absolute;
                    width: 0;
                    height: 0;
                    border-bottom: $btn-height/2 solid black;
                    border-left: $btn-width solid transparent;
                    bottom: 0;
                }
                .pane {
                    position: absolute;
                    height: $btn-height;
                    width: $btn-width;
                }
                .ghost-cover {
                    height: $btn-height;
                    width: $btn-width;
                }
            }
            #skip-btn {
                position: absolute;
                left: 70px;
                bottom: 27px;
                #skip {
                    position: absolute;
                }
            }
            .controls {
                height: 15px;
            }
            .test-volume {
                position: absolute;
                left: 120px;
                bottom: 5px;
                height: calc((80px*20)/64);
                width: calc((80px*20)/64);
                display: flex;
                justify-content: center;
                align-items: center;
                #silence {
                    height: $btn-height;
                    width: $btn-width;
                }
            }
            .silence-pane {
                position: absolute;
                left: calc((20*6px)/64);
                top: calc((20*-2px)/64);
                width: 0px;
                height: calc((20*16px)/64);
                background-image: linear-gradient(180deg, black 50%, white 50%);
                transform: rotate(45deg);
            }
        }
        .casing-volume {
            height: 6px;
            margin-left: 12px;
            margin-bottom: 18px;
            width: 0px;
            background-color: black;
            .bar {
                position: absolute;
                left: 4px;
                top: 5px;
                height: 3px;
                width: 54px;
                background-color: #070707;
                opacity: 0;
            }
            /* slidershell exists only
            to provide a positioning context for the range input and other elements.*/
            .slidershell {
                border: 0 none;
                position: relative;
                left: 0px;
                top: 0px;
                overflow: visible;
            }
            /* .sliderfill adds color (or a gradient as seen here) to the track as the user 
                drags the thumb. */
            .sliderfill {
                position: absolute;
                height: 3px;
                left: 4px;
                top: 5px;
                border-radius: 4px;
                pointer-events: none;
                background: white;
                opacity: 0;
            }
            #fill {
                background-color: white;
            }
            /* .sliderthumb can be any css you like including an image. 
                The dimensions must match those found in the rule for 
                input[type=range]::-webkit-slider-thumb. */
            .sliderthumb {
                width: 12px;
                height: 12px;
                /* background-image: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/358203/thumb.png'); */
                background-color: white;
                background-size: 40px 40px;
                background-position: 0px 0px;
                background-repeat: no-repeat;
                position: absolute;
                left: 0px;
                top: 0px;
                border: 0 none;
                border-radius: 50%;
                padding: 0px;
                margin: 0px;
                text-align: center;
                pointer-events: none;
                opacity: 0;
            }
            #thumb {
                background-color: white;
            }
            /* The .slider and .slidervertical classes are for the range inputs. 
                Set the z-index high so its on top. */
            .slider,
            .slider-vertical {
                position: absolute;
                left: 0px;
                top: 0px;
                overflow: visible;
                z-index: 100;
            }
            /* First we have to make transparent all the default elements of the range input.
                We use color:transparent to eliminate the default tick marks in IE. */
            input[type=range]::-ms-track {
                width: 100%;
                height: 100%;
                -webkit-appearance: none;
                margin: 0px;
                padding: 0px;
                border: 0 none;
                background: transparent;
                color: transparent;
                overflow: visible;
            }
            input[type=range]::-moz-range-track {
                width: 100%;
                height: 100%;
                -moz-appearance: none;
                margin: 0px;
                padding: 0px;
                border: 0 none;
                background: transparent;
                color: transparent;
                overflow: visible;
            }
            input[type=range] {
                width: 100%;
                height: 100%;
                -webkit-appearance: none;
                margin: 0px;
                padding: 0px;
                border: 0 none;
                background: transparent;
                color: transparent;
                overflow: visible;
            }
            /* we need a separate rule for when the range input is to be vertical */
            input[type=range].slidervertical {
                -webkit-appearance: slider-vertical;
                opacity: 1;
            }
            input[type=range]:focus::-webkit-slider-runnable-track {
                background: transparent;
                border: transparent;
            }
            input[type=range]:focus {
                outline: none;
            }
            input[type=range]::-webkit-slider-thumb {
                width: 20px;
                height: 20px;
                border-radius: 0px;
                border: 0 none;
                background: transparent;
                -webkit-appearance: none;
            }
        }
        .playback-time {
            font-family: 'Roboto', sans-serif;
            // background-color: steelblue;
            color: #DBD9D9;
            width: 100px;
            height: 38px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .empty-space {
            height: 40px;
            width: 250px;
            #insanity-div {
                height: 40px;
                width: 100px;
                background-color: blue;
            }
        }
        .screening-controls {
            @extend .controls-triad;
            position: absolute;
            left: 540px;
            bottom: 10px;
            .controls {
                height: 18px;
            }
            #settings {
                height: 20px;
            }
        }
    }
}

@keyframes fadein {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeout {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes lengthenScrub {
    from {
        top: 5px;
        height: 3px;
    }
    to {
        top: 4px;
        height: 4px;
    }
}

@keyframes shortenScrub {
    from {
        top: 4px;
        height: 4px;
    }
    to {
        top: 5px;
        height: 3px;
    }
}

@keyframes disappearThumb {
    from {
        height: 12px;
        width: 12px;
        top: 0px;
    }
    to {
        height: 0px;
        width: 0px;
        top: 6px;
    }
}

@keyframes triangleBottomDisappear {
    from {
        border-bottom: $btn-height/2 solid black;
    }
    to {
        border-bottom: 0px solid black;
    }
}

@keyframes triangleTopDisappear {
    from {
        border-top: $btn-height/2 solid black;
    }
    to {
        border-top: 0px solid black;
    }
}

@keyframes triangleBottomAppear {
    from {
        border-bottom: 0px solid black;
    }
    to {
        border-bottom: $btn-height/2 solid black;
    }
}

@keyframes triangleTopAppear {
    from {
        border-top: 0px solid black;
    }
    to {
        border-top: $btn-height/2 solid black;
    }
}

@keyframes blocksApart {
    from {
        width: $btn-height/2;
    }
    to {
        width: 0px;
    }
}

@keyframes blocksCombine {
    from {
        width: 0px;
    }
    to {
        width: $btn-height/2;
    }
}

@keyframes diagonalslideout {
    0% {
        left: calc((20*18px)/64);
        top: calc((20*4px)/64);
        width: 0px;
    }
    100% {
        top: calc((20*32px)/64);
        left: calc((20*-6px)/64);
        width: calc((20*100px)/64);
    }
}

@keyframes rotate60clockwise {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(30deg);
    }
}